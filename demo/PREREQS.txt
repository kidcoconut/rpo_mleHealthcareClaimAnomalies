#--- local prereqs
- install miniconda
    - conda create --name env_capstone python=3.10.8
    - conda activate env_capstone
    - conda install pandas matplotlib ipykernel 
    - pip install sklearn scikit-learn fastapi uvicorn
- pip list --format=freeze > env_capstone_py3.10.8.txt

- how to run fast api:
    - uvicorn main:app --reload --workers 1 --host 0.0.0.0 --port 8081

- how to run streamlit:
    - streamlit run lit_index.py --server.port 8080

#--- AWS prereqs
- ssh into AWS ec2
- install miniconda
    - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh
    - bash ~/miniconda.sh -b -p ~/miniconda
    - echo "PATH=$PATH:$HOME/miniconda/bin" >> ~/.bashrc
    - source ~/.bashrc
    - restart shell
    - conda update conda
    - rm miniconda.sh
    - conda install wget
- create conda env
    - conda create --name prod_capstone python=3.10.8
    - conda activate prod_capstone
- setup env
    - sudo yum update -y
    - sudo yum install git -y    
    - sudo yum install tmux
- clone repo
    - git clone https://github.com/monika0603/MLE10-Capstone-Project.git
    - git checkout ftr_demo
- set up prereqs
    - pip install -U pip
    - pip install -r prod_capstone_py3.10.8.txt
- run tmux  
    - tmux new -s demo_streamlit
    - tmux new -s demo_fastapi

#--- AWS Instance
name:   capstone-mle10-healthcare-claim-anomalies
ssh:    port 58022
https:  port 58443
http:   port 58080 streamlit
http:   port 58081 fastapi
ssh -i "capstone-mle10-imckone.pem" ec2-user@ec2-44-201-155-7.compute-1.amazonaws.com

    runtime ERRORS:
        - streamlit websocket timeout, firewall block?
            - sed -i -e 's/,1e3/,1e4/g' -e 's/,500/,10000/g' ~/miniconda3/envs/prod_capstone/lib/python3.10/site-packages/streamlit/static/static/js/main.3c7e5310.chunk.js


#--- docker commands (local)
docker build -t img_apiclaimanoms:dev .
docker run -p 48300:8000 --name ctr_apiClaimAnoms img_apiclaimanoms:dev


#--- docker commands (publish)
docker save <image:tag> > my_image.tar
docker load my_image.tar